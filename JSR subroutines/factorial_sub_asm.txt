;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;  file name   : factorial_sub.asm                      ;
;  author      : Iglesias-Flores Rebecca                ;
;  description : LC4 Assembly program to compute the    ;
;                factorial of a number w/subroutine     ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
;
;;; pseudo-code of factorial_sub algorithm
;cited from homework instructions pseudo code HW06
;MAIN
;A = 6 ;
;B = sub_factorial (A) ;
;// your sub_factorial subroutine goes here
;END
; }
;

;;; TO-DO: Implement the factorial_sub algorithm above using LC4 Assembly instructions

MAIN
  CONST R0, 6         ; A = 6, Setting R0 as A
  ADD R1, R0, #0      ; B = A, Setting R1 as B
  JSR SUB_FACTORIAL   ; CALL TO SUBROUTINE SUB_FACTORIAL 
  JMP END             ; JUMPS OVER SUBROUTINE SUB_FACTORIAL

.FALIGN
SUB_FACTORIAL
  CMPI R0, #0         ; sets NZP, what is A - 0
  BRnz END_ERROR      ; tests NZP if A < 0, then go to END_ERROR
  CMPI R0, #7         ; sets NZP, what is A -7
  BRp END_ERROR       ; tests NZP if A > 7, go to END_ERROR
  
LOOP  
  CMPI R0, #1         ; sets NZP (A-1)
  BRnz END_FACTORIAL  ; tests NZP (was A-1 neg or less than 1?, if yes, goto END_FACTORIAL)
  ADD R0, R0, #-1     ; A=A-1
  MUL R1, R1, R0      ; B=B*A
  BRnzp LOOP          ; always goto LOOP
  END_FACTORIAL
RET                   ; end subroutine
END_ERROR
  CONST R1, #-1       ; B = 1
RET                   ; end subroutine 
END                   ; end program